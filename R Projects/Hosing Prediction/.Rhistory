numeric20 = trainNumeric[,(11:20)]
numeric30 = trainNumeric[,(21:30)]
numeric40 = trainNumeric[,(31:38)]
numeric10['SalesPrice'] = trainNumeric['SalesPrice']
numeric10 = trainNumeric[,(1:10)]
numeric20 = trainNumeric[,(11:20)]
numeric30 = trainNumeric[,(21:30)]
numeric40 = trainNumeric[,(31:38)]
numeric10['SalePrice'] = trainNumeric$SalePrice
numeric20['SalePrice'] = trainNumeric['SalePrice']
numeric30['SalePrice'] = trainNumeric['SalePrice']
#numeric40 = trainNumeric[,(31:38)]
#numeric10 = as.matrix(numeric10)
#numeric20 = as.matrix(numeric20)
#numeric30 = as.matrix(numeric30)
#numeric40 = as.matrix(numeric40)
corrplot(cor(numeric10))
install.packages("corrplot")
library("corrplot", lib.loc="~/R/win-library/3.5")
numeric10 = trainNumeric[,(1:10)]
numeric20 = trainNumeric[,(11:20)]
numeric30 = trainNumeric[,(21:30)]
numeric40 = trainNumeric[,(31:38)]
numeric10['SalePrice'] = trainNumeric['SalePrice']
numeric20['SalePrice'] = trainNumeric['SalePrice']
numeric30['SalePrice'] = trainNumeric['SalePrice']
#numeric40 = trainNumeric[,(31:38)]
#numeric10 = as.matrix(numeric10)
#numeric20 = as.matrix(numeric20)
#numeric30 = as.matrix(numeric30)
#numeric40 = as.matrix(numeric40)
corrplot(cor(numeric10))
corrplot(cor(numeric20))
corrplot(cor(numeric30))
corrplot(cor(numeric40))
str(numeric10)
numeric10 = trainNumeric[,(1:10)]
numeric20 = trainNumeric[,(11:20)]
numeric30 = trainNumeric[,(21:30)]
numeric40 = trainNumeric[,(31:38)]
numeric10['SalePrice'] = trainNumeric['SalePrice']
numeric20['SalePrice'] = trainNumeric['SalePrice']
numeric30['SalePrice'] = trainNumeric['SalePrice']
#numeric40 = trainNumeric[,(31:38)]
#numeric10 = as.matrix(numeric10)
#numeric20 = as.matrix(numeric20)
#numeric30 = as.matrix(numeric30)
#numeric40 = as.matrix(numeric40)
numeric10$X = NULL
numeric10$Id = NULL
corrplot(cor(numeric10))
corrplot(cor(numeric20))
corrplot(cor(numeric30))
corrplot(cor(numeric40))
head(numeric10,10)
is.na(numeric10)
head(numeric10,10)
any(is.na(numeric10))
head(numeric10,10)
sum(is.na(numeric10))
head(numeric10,10)
sum(is.na(numeric10$LotFrontage))
head(numeric10,10)
sum(is.na(numeric10$MasVnrArea))
head(numeric10,10)
sum(is.na(numeric10$MasVnrArea))
#na.omit(numeric10)
numeric10$LotFrontage
head(numeric10,10)
sum(is.na(numeric10$MasVnrArea))
#na.omit(numeric10)
hist(numeric10$LotFrontage)
head(numeric10,10)
sum(is.na(numeric10$MasVnrArea))
#na.omit(numeric10)
plot(numeric10$LotFrontage)
pMiss <- function(x){sum(is.na(x))/length(x)*100}
apply(numeric10,2,pMiss)
apply(numeric10,1,pMiss)
pMiss <- function(x){sum(is.na(x))/length(x)*100}
apply(numeric10,2,pMiss)
#apply(numeric10,1,pMiss)
head(numeric10,10)
sum(is.na(numeric10$MasVnrArea))
#na.omit(numeric10)
#plot(numeric10$LotFrontage)
head(numeric10,10)
sum(is.na(numeric10$MasVnrArea))
#na.omit(numeric10)
#plot(numeric10$LotFrontage)
numeric10$MasVnrArea
head(numeric10,10)
sum(is.na(numeric10$MasVnrArea))
length(numeric10$MasVnrArea)
#na.omit(numeric10)
#plot(numeric10$LotFrontage)
numeric10$MasVnrArea
head(numeric10,10)
sum(is.na(numeric10$LotFrontage))
length(numeric10$LotFrontage)
#na.omit(numeric10)
#plot(numeric10$LotFrontage)
numeric10$LotFrontage
head(numeric10,10)
sum(is.na(numeric10$MasVnrArea))
length(numeric10$MasVnrArea)
#na.omit(numeric10)
#plot(numeric10$LotFrontage)
numeric10$MasVnrArea
?is.na
is.na(0)
is.na('0')
is.na(NA)
is.na('NA')
numeric10[is.na(numeric10$MasVnrAre)]
numeric10(is.na(numeric10$MasVnrAre))
numeric10(is.na(numeric10$MasVnrArea))
head(numeric10,10)
sum(is.na(numeric10$MasVnrArea))
length(numeric10$MasVnrArea)
#na.omit(numeric10)
#plot(numeric10$LotFrontage)
numeric10[is.na(numeric10$MasVnrArea),]
pMiss <- function(x){sum(is.na(x))/length(x)*100}
apply(numeric10,2,pMiss)
apply(numeric20,2,pMiss)
apply(numeric30,2,pMiss)
apply(numeric40,2,pMiss)
#apply(numeric10,1,pMiss)
pMiss <- function(x){sum(is.na(x))/length(x)*100}
apply(numeric10,2,pMiss)
print('######')
apply(numeric20,2,pMiss)
print('######')
apply(numeric30,2,pMiss)
print('######')
apply(numeric40,2,pMiss)
#apply(numeric10,1,pMiss)
require(corrplot)
numeric10 = trainNumeric[,(1:10)]
numeric20 = trainNumeric[,(11:20)]
numeric30 = trainNumeric[,(21:30)]
numeric40 = trainNumeric[,(31:39)]
numeric10['SalePrice'] = trainNumeric['SalePrice']
numeric20['SalePrice'] = trainNumeric['SalePrice']
numeric30['SalePrice'] = trainNumeric['SalePrice']
#numeric40 = trainNumeric[,(31:38)]
#numeric10 = as.matrix(numeric10)
#numeric20 = as.matrix(numeric20)
#numeric30 = as.matrix(numeric30)
#numeric40 = as.matrix(numeric40)
numeric10$X = NULL
numeric10$Id = NULL
corrplot(cor(numeric10))
corrplot(cor(numeric20))
corrplot(cor(numeric30))
corrplot(cor(numeric40))
numeric10['LotFrontage'] = NULL
na.omit(numeric10)
#plot(numeric10$LotFrontage)
#numeric10[is.na(numeric10$MasVnrArea),]
numeric10
corrplot(corr(numeric10))
corrplot(cor(numeric10))
numeric10['LotFrontage'] = NULL
na.omit(numeric10$MasVnrArea)
#plot(numeric10$LotFrontage)
#numeric10[is.na(numeric10$MasVnrArea),]
corrplot(cor(numeric10))
shape(numeric10)
dim(numeric10)
corrplot(cor(numeric10))
is.na(numeric10$MasVnrArea)
corrplot(cor(numeric10))
any(is.na(numeric10$MasVnrArea))
corrplot(cor(numeric10))
na.omit(numeric10$MasVnrArea)
any(is.na(numeric10$MasVnrArea))
corrplot(cor(numeric10))
numeric10 = na.omit(numeric10$MasVnrArea)
any(is.na(numeric10$MasVnrArea))
numeric10 = na.omit(numeric10)
any(is.na(numeric10$MasVnrArea))
numeric10 = na.omit(numeric10)
any(is.na(numeric10))
corrplot(cor(numeric10))
numeric10 = na.omit(numeric10)
any(is.na(numeric10))
#corrplot(cor(numeric10))
dim(numeric10)
numeric10
require(corrplot)
numeric10 = trainNumeric[,(1:10)]
numeric20 = trainNumeric[,(11:20)]
numeric30 = trainNumeric[,(21:30)]
numeric40 = trainNumeric[,(31:39)]
numeric10['SalePrice'] = trainNumeric['SalePrice']
numeric20['SalePrice'] = trainNumeric['SalePrice']
numeric30['SalePrice'] = trainNumeric['SalePrice']
#numeric40 = trainNumeric[,(31:38)]
#numeric10 = as.matrix(numeric10)
#numeric20 = as.matrix(numeric20)
#numeric30 = as.matrix(numeric30)
#numeric40 = as.matrix(numeric40)
numeric10$X = NULL
numeric10$Id = NULL
corrplot(cor(numeric10))
corrplot(cor(numeric20))
corrplot(cor(numeric30))
corrplot(cor(numeric40))
pMiss <- function(x){sum(is.na(x))/length(x)*100}
apply(numeric10,2,pMiss)
print('######')
apply(numeric20,2,pMiss)
print('######')
apply(numeric30,2,pMiss)
print('######')
apply(numeric40,2,pMiss)
#apply(numeric10,1,pMiss)
dim(numeric10)
row.has.na <- apply(numeric10, 1, function(x){any(is.na(x))})
sum(row.has.na)
numeric10 <- final[!row.has.na,]
dim(numeric10)
row.has.na <- apply(numeric10, 1, function(x){any(is.na(x))})
sum(row.has.na)
numeric10 <- numeric10[!row.has.na,]
dim(numeric10)
require(corrplot)
numeric10 = trainNumeric[,(1:10)]
numeric20 = trainNumeric[,(11:20)]
numeric30 = trainNumeric[,(21:30)]
numeric40 = trainNumeric[,(31:39)]
numeric10['SalePrice'] = trainNumeric['SalePrice']
numeric20['SalePrice'] = trainNumeric['SalePrice']
numeric30['SalePrice'] = trainNumeric['SalePrice']
#numeric40 = trainNumeric[,(31:38)]
#numeric10 = as.matrix(numeric10)
#numeric20 = as.matrix(numeric20)
#numeric30 = as.matrix(numeric30)
#numeric40 = as.matrix(numeric40)
numeric10$X = NULL
numeric10$Id = NULL
corrplot(cor(numeric10))
corrplot(cor(numeric20))
corrplot(cor(numeric30))
corrplot(cor(numeric40))
numeric10$LotFrontage = NULL
dim(numeric10)
row.has.na <- apply(numeric10, 1, function(x){any(is.na(x))})
sum(row.has.na)
numeric10 <- numeric10[!row.has.na,]
dim(numeric10)
corrplot(corr(numeric10))
corrplot(cor(numeric10))
numeric10$MSSubClass = NULL
numeric10$OverallCond = NULL
install.packages("VIM")
library(VIM)
aggr_plot <- aggr(numeric10, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(numeric10), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
aggr_plot <- aggr(numeric20, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(numeric20), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
install.packages("VIM")
library(VIM)
aggr_plot <- aggr(numeric10, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(numeric10), cex.axis=.7, gap=3, ylab=c("Histogram of missing data in numeric10","Pattern"))
aggr_plot <- aggr(numeric20, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(numeric10), cex.axis=.7, gap=3, ylab=c("Histogram of missing data in numeric20","Pattern"))
aggr_plot <- aggr(numeric30, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(numeric10), cex.axis=.7, gap=3, ylab=c("Histogram of missing data in numeric30","Pattern"))
aggr_plot <- aggr(numeric40, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(numeric10), cex.axis=.7, gap=3, ylab=c("Histogram of missing data in numeric 40","Pattern"))
install.packages("VIM")
install.packages("VIM")
library(VIM)
aggr_plot <- aggr(numeric10, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(numeric10), cex.axis=.7, gap=3, ylab=c("Histogram of missing data in numeric10","Pattern"))
aggr_plot <- aggr(numeric20, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(numeric20), cex.axis=.7, gap=3, ylab=c("Histogram of missing data in numeric20","Pattern"))
aggr_plot <- aggr(numeric30, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(numeric30), cex.axis=.7, gap=3, ylab=c("Histogram of missing data in numeric30","Pattern"))
aggr_plot <- aggr(numeric40, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(numeric40), cex.axis=.7, gap=3, ylab=c("Histogram of missing data in numeric 40","Pattern"))
install.packages("VIM")
numeric10$LotFrontage = NULL
dim(numeric10)
row.has.na <- apply(numeric10, 1, function(x){any(is.na(x))})
sum(row.has.na)
numeric10 <- numeric10[!row.has.na,]
dim(numeric10)
numeric30$GarageYrBlt = NULL
dim(numeric10)
row.has.na <- apply(numeric30, 1, function(x){any(is.na(x))})
sum(row.has.na)
numeric30 <- numeric30[!row.has.na,]
dim(numeric30)
corrplot(cor(numeric10))
corrplot(cor(numeric30))
names(numeric20)
#numeric20$MSSubClass = NULL
#numeric20$OverallCond = NULL
names(numeric20)
numeric20$BsmtFinSF2 = NULL
numeric20$LowQualFinSF = NULL
numeric20$BsmtHalfBath = NULL
names(numeric20)
numeric20$BsmtFinSF2 = NULL
numeric20$LowQualFinSF = NULL
numeric20$BsmtHalfBath = NULL
names(numeric20)
names(numeric20)
numeric20$BsmtFinSF2 = NULL
numeric20$LowQualFinSF = NULL
numeric20$BsmtHalfBath = NULL
names(numeric20)
names(numeric30)
numeric20$BsmtFinSF2 = NULL
numeric20$LowQualFinSF = NULL
numeric20$BsmtHalfBath = NULL
names(numeric20)
names(numeric20)
numeric20$BsmtFinSF2 = NULL
numeric20$LowQualFinSF = NULL
numeric20$BsmtHalfBath = NULL
names(numeric20)
names(numeric30)
numeric20$BedroomAbvGr = NULL
numeric20$KitchenAbvGr = NULL
names(numeric30)
names(numeric20)
numeric20$BsmtFinSF2 = NULL
numeric20$LowQualFinSF = NULL
numeric20$BsmtHalfBath = NULL
names(numeric20)
names(numeric30)
numeric30$BedroomAbvGr = NULL
numeric30$KitchenAbvGr = NULL
names(numeric30)
names(numeric20)
numeric20$BsmtFinSF2 = NULL
numeric20$LowQualFinSF = NULL
numeric20$BsmtHalfBath = NULL
names(numeric20)
names(numeric30)
numeric30$BedroomAbvGr = NULL
numeric30$KitchenAbvGr = NULL
names(numeric30)
names(numeric40)
#numeric30[,!c("BedroomAbvGr"," = NULL
#numeric30$KitchenAbvGr = NULL
#names(numeric30)
names(numeric20)
numeric20$BsmtFinSF2 = NULL
numeric20$LowQualFinSF = NULL
numeric20$BsmtHalfBath = NULL
names(numeric20)
names(numeric30)
numeric30$BedroomAbvGr = NULL
numeric30$KitchenAbvGr = NULL
names(numeric30)
names(numeric40)
numeric30[,!c("OpenPorchSF","EnclosedPorch")]
names(numeric20)
numeric20$BsmtFinSF2 = NULL
numeric20$LowQualFinSF = NULL
numeric20$BsmtHalfBath = NULL
names(numeric20)
names(numeric30)
numeric30$BedroomAbvGr = NULL
numeric30$KitchenAbvGr = NULL
names(numeric30)
names(numeric40)
numeric30[c("OpenPorchSF","EnclosedPorch")]
names(numeric20)
numeric20$BsmtFinSF2 = NULL
numeric20$LowQualFinSF = NULL
numeric20$BsmtHalfBath = NULL
names(numeric20)
names(numeric30)
numeric30$BedroomAbvGr = NULL
numeric30$KitchenAbvGr = NULL
names(numeric30)
names(numeric40)
numeric30[,c("OpenPorchSF","EnclosedPorch")]
names(numeric20)
numeric20$BsmtFinSF2 = NULL
numeric20$LowQualFinSF = NULL
numeric20$BsmtHalfBath = NULL
names(numeric20)
names(numeric30)
numeric30$BedroomAbvGr = NULL
numeric30$KitchenAbvGr = NULL
names(numeric30)
names(numeric40)
numeric30[,c(OpenPorchSF,EnclosedPorch)]
names(numeric20)
numeric20$BsmtFinSF2 = NULL
numeric20$LowQualFinSF = NULL
numeric20$BsmtHalfBath = NULL
names(numeric20)
names(numeric30)
numeric30$BedroomAbvGr = NULL
numeric30$KitchenAbvGr = NULL
names(numeric30)
names(numeric40)
numeric30[,c('OpenPorchSF','EnclosedPorch')]
names(numeric20)
numeric20$BsmtFinSF2 = NULL
numeric20$LowQualFinSF = NULL
numeric20$BsmtHalfBath = NULL
names(numeric20)
names(numeric30)
numeric30$BedroomAbvGr = NULL
numeric30$KitchenAbvGr = NULL
names(numeric30)
names(numeric40)
numeric40[,c('OpenPorchSF','EnclosedPorch')]
#numeric30$KitchenAbvGr = NULL
names(numeric40)
names(numeric20)
numeric20$BsmtFinSF2 = NULL
numeric20$LowQualFinSF = NULL
numeric20$BsmtHalfBath = NULL
names(numeric20)
names(numeric30)
numeric30$BedroomAbvGr = NULL
numeric30$KitchenAbvGr = NULL
names(numeric30)
names(numeric40)
numeric40 = numeric40[,c('OpenPorchSF','EnclosedPorch')]
#numeric30$KitchenAbvGr = NULL
names(numeric40)
dim(numeric10)[1]
dim(numeric10)[2]+dim(numeric20)[2]+dim(numeric30)[2]+dim(numeric40)[2]
dim(numeric10)[2]
#+dim(numeric20)[2]+dim(numeric30)[2]+dim(numeric40)[2]
dim(numeric10)[2]
+dim(numeric20)[2]
#+dim(numeric30)[2]+dim(numeric40)[2]
dim(numeric10)[2]
+dim(numeric20)[2]
+dim(numeric30)[2]
+dim(numeric40)[2]
correlationMatrix <- cor(numeric10)
highlyCorrelated <- findCorrelation(correlationMatrix, cutoff=0.5)
install.packages(earth)
library(earth)
install.packages('earth')
library(earth)
model <- earth(SalePrice ~ ., data=numeric10) # build model
ev <- evimp (model)
print(ev)
plot(ev)
summary(trainFactor)
plot(cars)
setwd("C://Users//conne//Desktop//DataMining")
getwd()
# read in OrderBreakdown.txt file into R as a data.frame named "data"
train <- read.table(file="train.csv", header=T, sep=",")
test <- read.table(file="test.csv", header=T, sep=",")
#head(train,5)
#names(train)
str(train)
trainFirst20 = train[,(1:20)]
train21to40 = train[,(21:40)]
train41to60 = train[,(41:60)]
train61to81 = train[,(61:81)]
names(trainFirst20)
names(train21to40)
names(train41to60)
names(train61to81)
trainFirst20["SalePrice"] = train$SalePrice
train21to40["SalePrice"] = train$SalePrice
train41to60["SalePrice"] = train$SalePrice
train61to81["SalePrice"] = train$SalePrice
str()
summary(trainFactor)
pMiss <- function(x){sum(is.na(x))/length(x)*100}
apply(trainFactor,2,pMiss)
trainFactor$Alley = NULL
trainFactor$FireplaceQu = NULL
trainFactor$GarageType = NULL
trainFactor$GarageFinish = NULL
trainFactor$GarageQual = NULL
trainFactor$GarageType = NULL
trainFactor$MiscFeature = NULL
trainFactor$Fence =NULL
trainFactor$PoolQC = NULL
pMiss <- function(x){sum(is.na(x))/length(x)*100}
apply(trainFactor,2,pMiss)
trainFactor$Alley = NULL
trainFactor$FireplaceQu = NULL
trainFactor$GarageType = NULL
trainFactor$GarageFinish = NULL
trainFactor$GarageQual = NULL
trainFactor$GarageType = NULL
trainFactor$MiscFeature = NULL
trainFactor$Fence =NULL
trainFactor$PoolQC = NULL
trainFactor$GarageCond = NULL
pMiss <- function(x){sum(is.na(x))/length(x)*100}
apply(trainFactor,2,pMiss)
#numeric10$LotFrontage = NULL
dim(trainFactor)
row.has.na <- apply(trainFactor, 1, function(x){any(is.na(x))})
sum(row.has.na)
numeric10 <- trainFactor[!row.has.na,]
dim(trainFactor)
#numeric10$LotFrontage = NULL
dim(trainFactor)
row.has.na <- apply(trainFactor, 1, function(x){any(is.na(x))})
sum(row.has.na)
trainFactor <- trainFactor[!row.has.na,]
dim(trainFactor)
#numeric10$LotFrontage = NULL
dim(trainFactor)
row.has.na <- apply(trainFactor, 1, function(x){any(is.na(x))})
sum(row.has.na)
trainFactor <- trainFactor[!row.has.na,]
dim(trainFactor)
head(trainFactor)
